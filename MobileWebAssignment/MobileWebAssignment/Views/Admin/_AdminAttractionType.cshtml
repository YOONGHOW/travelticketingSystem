@using X.PagedList
@using X.PagedList.Mvc.Core




<table>
	<thead>
		<tr>
			<th>Attraction Type ID</th>
			<th>Name</th>
			<th colspan="2" style="text-align:center;">Action</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var at in ViewBag.AttractionTypes)
		{
			<tr>
				<td>@at.Id</td>
				<td>@at.Name</td>
				<td style="text-align:center;"><button class="update" data-get="/Admin/AdminAttractionTypeUpdate/@at.Id">Update</button></td>
				<td style="text-align:center;"><button class="delete" data-get="/Admin/AdminAttractionTypeDelete/@at.Id">Delete</button></td>
			</tr>
		}
	</tbody>
</table>
@{
	var AToptions = PagedListRenderOptions.ClassicPlusFirstAndLast;
	AToptions.LinkToFirstPageFormat = "First";
	AToptions.LinkToLastPageFormat = "Last";
	AToptions.LinkToPreviousPageFormat = "Previous";
	AToptions.LinkToNextPageFormat = "Next";
}

@Html.PagedListPager(
(IPagedList)ViewBag.AttractionTypes,
page => $"?ATpage={page}",
AToptions
)
