@{
	Layout = "_AdminLayout";
	ViewBag.Title = "Admin | Feedback";
}

@model IEnumerable<FeedbackInsertVM>

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="/css/AdminCss/AdminFeedback.css" asp-append-version="true">

</head>
<body>
	<div class="reviews-container">

		<div class="header">
			<h2>Reviews</h2>
			<span class="date-range">March 2021 - February 2022</span>
		</div>

		<!-- Filter Section -->
		<div class="filtering">
			<label for="attraction"><b>Attraction:</b></label>
			<select id="attraction" name="attraction">
				<option value="all">All Attractions</option>
				@foreach (var a in ViewBag.attractions)
				{
					<option value="@a.Id">@a.Name</option>
				}
			</select>
		</div>

		<!-- Stats Section -->
		<div class="stats">
			<div class="stat">
				<h3>@Model.Count()</h3>
				<p>Total Reviews</p>
			</div>
			<div class="stat">
				@{
					int total = 0;
					double averageRating = 0.0;
					foreach (var f in Model)
					{
						total += f.Rating;
					}

					averageRating = (double)total / Model.Count();
				}
				<h3>@averageRating.ToString("F1") ★</h3>
				<p>Average Rating</p>
			</div>
		</div>

		<!-- Reviews Section -->
		@foreach (var f in Model)
		{
			<div class="review">
				<div class="review-header">
					<div class="user-info">
						<img src="/images/miyabi.jpeg" alt="User">
						<div class="details">
							<span class="user-name">Miyabi</span>
							<span>Total Spend: $200</span>
							<span>Reviews Title: @f.commentDetail.Title</span>
						</div>
					</div>
					<span class="rating">
						@for (int i = 0; i < f.Rating; i++)
						{
							<b>★</b>
						}
					</span>
				</div>
				<p class="review-text">@f.commentDetail.Review</p>
				<button id="replyButton">Reply</button>
				<button id="viewComment">View All Comment</button>
				<div class="actions" style="display: none;">
					<form method="post" action="addComment">
						<div class="input-box">
							<label class="details">Comment</label>
							<br />
							<textarea name="comment" class="title"></textarea>
						</div>
						<input type="hidden" name="feedbackId" value="@f.Id" />
						<button class="public" name="reply" value="Public">Public Comment</button>
						<button class="private" name="reply" value="Private">Direct Message</button>
					</form>
				</div>
				<br />
				<br />
				<div id="replyList" style="display: none;">
					@if (f.feedbackReplyList.Count != 0)
					{
						@foreach (var fr in f.feedbackReplyList)
						{
							<div class="review-header" data-comment-id="@fr.Id">
								<div class="user-info">
									<img src="/images/miyabi.jpeg" alt="User">
									<div class="details">
										<span class="user-name">Miyabi Admin</span>
									</div>
								</div>
								<form method="post" action="DeleteComment">
									<input type="hidden" name="replyId" value="@fr.Id" />
									<button class="delete-comment" onclick="return confirm('Are you sure you want to delete this comment?');">Delete</button>
								</form>
							</div>
							<span class="review-text">@fr.Comment</span>
						}
					}
					else
					{
						<div>
							<p>No reply yet.</p>
						</div>
					}
				</div>


			</div>
		}

	</div>
</body>
</html>
<script>
		// Get all 'Reply' buttons on the page
	const replyButtons = document.querySelectorAll('#replyButton');

	// Get all 'View Comment' buttons on the page
	const viewCommentButtons = document.querySelectorAll('#viewComment');

		// Reply Button Logic
	replyButtons.forEach(button => {
		button.addEventListener('click', function() {
			const actionsDiv = this.closest('.review').querySelector('.actions');
			actionsDiv.style.display = (actionsDiv.style.display === 'none' || actionsDiv.style.display === '') ? 'block' : 'none';
		});
	});

	// View Comment Button Logic
	viewCommentButtons.forEach(button => {
		button.addEventListener('click', function() {
			const replyListDiv = this.closest('.review').querySelector('#replyList');
			replyListDiv.style.display = (replyListDiv.style.display === 'none' || replyListDiv.style.display === '') ? 'block' : 'none';
		});
	});

</script>
<script>
	// Attach event listener to form submit
	document.querySelector('form').addEventListener('submit', function(event) {
		var commentField = document.querySelector('textarea[name="comment"]');
		if (!commentField.value.trim()) {  // Check if the textarea is empty or only spaces
			alert("Comment cannot be empty.");
			event.preventDefault();  // Prevent form submission
		}
	});
</script>


