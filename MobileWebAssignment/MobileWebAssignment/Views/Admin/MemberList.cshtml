@{
    Layout = "_AdminLayout";
    ViewBag.Title = "Admin_Member";
}

@using X.PagedList
@using X.PagedList.Mvc.Core
@model (IPagedList<Member>, IPagedList<Admin>)

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="/css/AdminCss/MemberList.css" asp-append-version="true">
</head>
<body>
    <div class="content">
        @{
            var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
            options.LinkToFirstPageFormat = "First";
            options.LinkToLastPageFormat = "Last";
            options.LinkToPreviousPageFormat = "Previous";
            options.LinkToNextPageFormat = "Next";
        }



        <div class="MemberListData">
            <h3 class="MemberListTitle">Users with Role: Member</h3>

            <!-- Search bar for Members -->
            <div class="search-container">
                <form method="get" asp-action="MemberList" asp-controller="Admin">
                    <input type="text" name="MemberSearch" placeholder="Search Members..." value="@ViewContext.HttpContext.Request.Query["MemberSearch"]" />

                    <button type="submit">Search</button>
                </form>
            </div>

            <span class="tableNav">
                @Model.Item1.Count() of @Model.Item1.TotalItemCount record(s) |
                Page @Model.Item1.PageNumber of @Model.Item1.PageCount
            </span>
            <br />

            <div class="MemberListTable">
                <table>
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Email</th>
                            <th>Name</th>
                            <th>IC</th>
                            <th>Phone No.</th>
                            <th>Gender</th>
                            <th>Status</th>
                            <th colspan="2" style="text-align:center;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Item1.Count != 0)
                        {
                            foreach (var user in Model.Item1)
                            {
                                <tr>
                                    <td>@user.Id</td>
                                    <td>@user.Email</td>
                                    <td>@user.Name</td>
                                    <td>@user.IC</td>
                                    <td>@user.PhoneNumber</td>
                                    <td>@user.Gender</td>
                                    <td>@(user.Freeze ? "Block" : "Active")</td>
                                    <td style="text-align:center;">
                                        <button class="update" data-get="/Admin/MemberDetails/@user.Id">Details</button>
                                    </td>
                                    <td style="text-align:center;">
                                        <form method="post" asp-action="UserStatus" asp-controller="Admin">
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="toggle-block @(user.Freeze ? "unblock" : "block")">
                                                @(user.Freeze ? "Unblock" : "Block")
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" style="text-align:center;">No Members Found</td>
                            </tr>
                        }
                    </tbody>
                </table>

                @Html.PagedListPager(
                         Model.Item1,
                         page => $"?MemberPage={page}&MemberSearch={@ViewContext.HttpContext.Request.Query["MemberSearch"]}&AdminSearch={@ViewContext.HttpContext.Request.Query["AdminSearch"]}",
                         options
                         )
            </div>
        </div>

        <hr style="margin: 20px 0; border: 1px solid #ccc;" />



        <div class="MemberListData">
            <h3 class="MemberListTitle">Users with Role: Admin</h3>
            <!-- Search bar for Admins -->

            <div class="search-container">
                <form method="get" asp-action="MemberList" asp-controller="Admin">
                    <input type="text" name="AdminSearch" placeholder="Search Admins..." value="@ViewContext.HttpContext.Request.Query["AdminSearch"]" />
                    <button type="submit">Search</button>
                </form>
            </div>

            <span class="tableNav">
                @Model.Item2.Count() of @Model.Item2.TotalItemCount record(s) |
                Page @Model.Item2.PageNumber of @Model.Item2.PageCount
                <button class="create" data-get="/Admin/AdminUpdateMember">Update Your Account</button>
                <button class="create" data-get="/Admin/CreateAccount">Create New Admin Account</button>
            </span>
            <br />
            <div class="MemberListTable">
                <table>
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Email</th>
                            <th>Name</th>
                            <th>IC</th>
                            <th>Phone No.</th>
                            <th>Gender</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Item2.Count != 0)
                        {
                            foreach (var admin in Model.Item2)
                            {
                                <tr>
                                    <td>@admin.Id</td>
                                    <td>@admin.Email</td>
                                    <td>@admin.Name</td>
                                    <td>@admin.IC</td>
                                    <td>@admin.PhoneNumber</td>
                                    <td>@admin.Gender</td>
                                    <td>@(admin.Freeze ? "Block" : "Active")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" style="text-align:center;">No Admins Found</td>
                            </tr>
                        }
                    </tbody>
                </table>

                @Html.PagedListPager(
                         Model.Item2,
                         page => $"?AdminPage={page}&MemberSearch={@ViewContext.HttpContext.Request.Query["MemberSearch"]}&AdminSearch={@ViewContext.HttpContext.Request.Query["AdminSearch"]}",
                         options
                         )
            </div>
        </div>

    </div>
</body>
</html>
