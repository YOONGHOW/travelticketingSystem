@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Attraction>

<table>
	<thead>
		<tr>
			<th>Attraction ID</th>
			<th>Attraction Name</th>
			<th>Attraction Type</th>
			<th>Location(Region)</th>
			<th colspan="3" style="text-align:center;">Action</th>
		</tr>
	</thead>
	<tbody>
		@if (Model.Count == 0)
		{
			<tr><td colspan="6" style="text-align:center;">No record found.</td></tr>
		}
		@foreach (var a in Model)
		{
			<tr>
				<td>@a.Id</td>
				<td>@a.Name</td>
				<td>@a.AttractionType?.Name</td>
				<td>@a.Location</td>
				<td style="text-align:center;"><button class="update" data-get="/Admin/AdminAttractionUpdate/@a.Id">Update</button></td>
				<td style="text-align:center;"><button class="delete" data-get="/Admin/AdminAttractionDelete/@a.Id">Delete</button></td>
			</tr>
		}

	</tbody>
</table>
@{
	var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
	options.LinkToFirstPageFormat = "First";
	options.LinkToLastPageFormat = "Last";
	options.LinkToPreviousPageFormat = "Previous";
	options.LinkToNextPageFormat = "Next";
}

@Html.PagedListPager(Model, page => $"?Apage={page}", options)







