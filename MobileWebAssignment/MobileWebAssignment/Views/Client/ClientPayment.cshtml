@model PaymentVM

@{
    Layout = "_ClientLayout";
    ViewBag.Title = "Client | Payment";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/js/Paypal.js" type="text/javascript" defer></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Payment Page</title>
    <script src="https://www.paypal.com/sdk/js?client-id=AZcS3pdbVUWyMLj-vHkZd-6nbwdyosowOUOZ8qsmy6ibUjYY8PilqXUMANBLJu5XlQRP7ZTVI5ojZsdE&disable-funding=card"></script>
   
    <style>
        html body {
            background-color: #0d131a;
        }

        .user_image img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
        }

        .loadpage {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            z-index: 1050;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

            .loadpage img {
                width: 100px;
                margin-bottom: 15px;
            }

        .orderContainer:hover {
            background-color: black;
        }

        #productImage{
            width:400px;
            height:250px;
        }

        .text-danger{
            margin-top:0;
            padding-top:0;
        }
    </style>
</head>
<body>
    @* <div class="loadpage d-flex"> *@
    @*     <img src="/images/loading.gif" alt="Loading"> *@
    @*     <p>Connection...</p> *@
    @* </div> *@
  
    <div class="container my-5">
        <div class="row rounded-3" style="box-shadow: 10px 10px 10px #fbf6f6;background-color: #eeebeb;">
            <!-- Left Panel -->
            <div class="col-md-6 p-4 rounded-3" style="background-color: #eeebeb;">
                <div class="d-flex align-items-center mb-4">
                    <img src="https://picsum.photos/400/250" class="me-2" alt="User Image" style="width: 40px; height: 40px; border-radius: 100%;" />
                    <p class="mb-0">User Name</p>
                </div>

                <div class="productDetail mb-4">
                    <div class="mb-3">
                        <p id="productName">Product Name</p>
                        <p id="productPrice">Product Price</p>
                    </div>
                    <div>
                        <img id="productImage" src="https://picsum.photos/400/250" alt="Product Image" class="img-fluid rounded">
                    </div>
                </div>

                <div class="overflow-auto" style="max-height: 230px;">
                    @{
                        int count = 1;
                    }
                    @foreach (var s in ViewBag.CartItems)
                    {

                        <div class="orderContainer@(count) orderContainer p-3 rounded mb-2" style="background-color:#b6b6b6;cursor: pointer"
                             onclick="updateProductDetail(this,'@s.Ticket.ticketName', 'RM @s.Ticket.ticketPrice', '@s.imagepath')">
                            <p class="form-control-plaintext fw-bold">@s.Ticket.ticketName</p>
                            <p class="form-control-plaintext text-end ticketPrice">RM @s.Subtotal</p>
                            <p class="form-control-plaintext">x @s.Quantit</p>
                            <input type="hidden" value="@s.imagepath" />
                            <p class="form-control-plaintext ">RM @s.Ticket.ticketPrice</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Right Panel -->
            <div class="col-md-6 p-4" style="border-radius: 0 10px 10px 0 ; background-color: #e3e0e0;">
                <h5>Payment Details</h5>
                <p class="text-muted">Complete your purchase by providing your payment details</p>

                <form method="post">
                    <div asp-validation-summary="ModelOnly"></div>
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">Email Address</label>
                        <input asp-for="Email"  type="email" id="paymentEmail" class="form-control" placeholder="e.g. user@example.com" autofocus>
                        <span asp-validation-for="Email" class="text-danger form-control " style="background:none"></span>
                    </div>

                    <div class="mb-3">
                        <label for="paymentMethod" class="form-label">Payment Method</label>
                        <select id="paymentMethod" class="form-select">
                            <option value="card">Bank Card</option>
                            <option value="paypal">PayPal</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CardNumber" for="cardNumber" class="form-label">Card Details</label>
                        <input asp-for="CardNumber" type="text" id="cardNumber" class="form-control" placeholder="Card Number">
                        <span asp-validation-for="CardNumber" class="text-danger form-control " style="background:none"></span>
                        <div class="d-flex">
                            <input asp-for="ExpirationDate" type="text" id="expDate" class="form-control me-2" placeholder="MM/YY" maxlength="5">
                          
                            <input asp-for="CVV" type="password" id="cvv" class="form-control" placeholder="CVV" maxlength="3">
                            
                        </div>
                        <div class="d-flex" >
                            <span asp-validation-for="ExpirationDate" class="text-danger form-control me-2 " style="background:none"></span>
                            <span asp-validation-for="CVV" class="text-danger  form-control " style="background:none"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CardholderName" for="cardHolderName" class="form-label">Cardholder Name</label>
                        <input asp-for="CardholderName"  type="text" id="cardHolderName" class="form-control" placeholder="Cardholder Name">
                        <span asp-validation-for="CardholderName" class="text-danger form-control " style="background:none"></span>
                    </div>

                    <div class="paymentCalculation mb-3">
                        <div class="d-flex justify-content-between">
                            <label for="subtotalcal">Subtotal</label>
                            <input type="text" id="subtotalcal" class="form-control-plaintext text-end" value="RM 00.00" readonly>
                        </div>
                        <div class="d-flex justify-content-between">
                            <label for="shiping">Shipping Fee</label>
                            <input type="text" id="shiping" class="form-control-plaintext text-end" value="RM 4.90" readonly>
                        </div>
                        <div class="d-flex justify-content-between fw-bold">
                            <label for="totalcal">Total</label>
                            <input type="text" id="totalcal" class="form-control-plaintext text-end" value="RM 00.00" readonly>
                        </div>
                    </div>
                    @{
                        // Safely get the item count from ViewBag.CartItems
                        int itemCount = (ViewBag.CartItems as List<CartPaymentVM>)?.Count ?? 0;

                        // Determine if the button should be disabled
                        var isDisabled = itemCount == 0; // Disable if no items in the cart
                    }
                    <button class="btn btn-primary w-100" disabled="@isDisabled" id="payButton" >Pay RM 00.00 </button>
                    <div id="paypal-button-container">
                    </div>
                </form>

            </div>
        </div>
    </div>
    <script>
                document.addEventListener('DOMContentLoaded', () => {
            // Select the first container
            const firstContainer = document.querySelector('.orderContainer1');

            // If a container exists, simulate a click event
            if (firstContainer) {
                updateProductDetail(
                    firstContainer,
                    firstContainer.querySelector('.fw-bold').textContent, // Assuming name is in this class
                    firstContainer.querySelector('.text-end').textContent, // Assuming price is in this class
                    firstContainer.querySelector('input[type="hidden"]').value // Assuming image path is stored here
                );

                // Apply the border to indicate it's selected
                firstContainer.style.border = '2px solid black';
            }
        });

              function updateProductDetail(container, name, price, imagePath) {
            // Remove border from all containers
            var containers = document.querySelectorAll('.orderContainer');
            console.log(containers);
            containers.forEach(function (el) {
               el.style.border = '';
            });

            // Update product name
            document.getElementById('productName').textContent = name;

            // Update product price
            document.getElementById('productPrice').textContent = price;

            // Update product image
            document.getElementById('productImage').src = imagePath;
                productImage.onerror = function () {
            this.src = '/images/error.png';  // Set a default image if the original fails
        };
            // Add border to the clicked container
            container.style.border = '2px solid black';
        }

              // Function to calculate the subtotal
        function calculateSubtotal() {
            let total = 0;

            // Loop through each order container to get ticket prices
            document.querySelectorAll('.orderContainer').forEach(function (container) {
                // Get the ticket price from the container
                const ticketPriceElement = container.querySelector('.ticketPrice');
                const ticketPrice = parseFloat(ticketPriceElement.innerText.replace('RM', '').trim()); // Remove 'RM' and parse as float
                total += ticketPrice; // Add the price to the total
            });

            // Update the subtotal field with the calculated total
            const subtotalField = document.getElementById('subtotalcal');
            subtotalField.value = 'RM ' + total.toFixed(2); // Format the total to 2 decimal places
        }

       
            function updateTotal() {
            // Get the current subtotal and shipping fee values
            var subtotal = parseFloat(document.getElementById('subtotalcal').value.replace('RM', '').trim());
            var shippingFee = parseFloat(document.getElementById('shiping').value.replace('RM', '').trim());

            // Calculate the total
            var total = subtotal + shippingFee;
            var payButton = document.getElementById('payButton');
            // Update the totalcal input with the calculated total
            document.getElementById('totalcal').value = 'RM ' + total.toFixed(2);
         
            payButton.innerText = 'Pay RM ' + total.toFixed(2);

        }

         // Call the calculateSubtotal function when the page loads
        window.onload = function () {
            calculateSubtotal();
            updateTotal(); // Update the total based on the shipping fee
        };

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

